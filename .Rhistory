colnames(Acu)[2] = "abb" # Change Column Name
Acu2 = merge(Acu,lookup,"abb") # make one dataset with state names and abb
head(Acu2)
AcuMapData = count(Acu2,State) #count up the occurance of each state.
head(AcuMapData)
#AcuMapData = AcuMapData[-c(5,9,43),] #Shows contrast between other states better
colnames(AcuMapData)[2] = "AcuSpikes" #change "n" to "Acuspikes"
head(AcuMapData)
AcuMapData$region <- tolower(AcuMapData$State)
head(AcuMapData)
AcuMapData2 = AcuMapData[-1]
states <- map_data("state")
head(AcuMapData2)
head(states)
map.df <- merge(states,AcuMapData2, by="region", all.x=T)
head(map.df)
map.df <- map.df[order(map.df$order),]
head(map.df)
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=AcuSpikes))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Acuspike Systems by State")+
coord_map()
setwd("~/Desktop/SMU Info/Classes/Doing Data Science/Github/DDS_Project1/Github")
beers <- read.table("Beers.csv", header = T)
breweries <- read.table("Breweries.csv", header = T)
beers <- read.csv("Beers.csv", header = T)
breweries <- read.csv("Breweries.csv", header = T)
head(beers)
head(breweries)
#merge data sets on Brewery_id
names(breweries)[1] <- "Brewery_id"
df1 <- merge(beers, breweries, by = "Brewery_id", all = T)
names(df1)[2] <- "Beer"
names(df1)[8] <- "Brewery"
str(df1)
head(df1)
df2 <- na.omit(df1$IBU)
head(df2)
df2 <- df1
df2$IBU <- na.omit(df1$IBU)
df2 <- na.omit(df1)
head(df2)
df3 <- df1 %>% group_by(State) %>%
summarize(medianABV = median(ABV, na.rm = T))
head(df3)
df3.ABV <- df1 %>% group_by(State) %>%
summarize(medianABV = median(ABV, na.rm = T))
df3.IBU <- df1 %>% group_by(State) %>%
summarize(medianABV = median(IBU, na.rm = T))
df3.ABV <- df1 %>% group_by(State) %>%
summarize(medianABV = median(ABV, na.rm = T))
df3.IBU <- df1 %>% group_by(State) %>%
summarize(medianABV = median(IBU, na.rm = T))
df3.IBU
df3.ABV
df4 <- cbind(df3.ABV,df3.IBU)
head(df4)
df4 <- df4[,-3]
head(df4)
beers <- read.csv("beers.csv", header = T)
breweries <- read.csv("breweries.csv", header = T)
#merge data sets on Brewery_id
names(breweries)[1] <- "Brewery_id"
df1 <- merge(beers, breweries, by = "Brewery_id", all = T)
names(df1)[2] <- "Beer"
names(df1)[8] <- "Brewery"
df2 <- na.omit(df1)
df3.ABV <- df1 %>% group_by(State) %>%
summarize(medianABV = median(ABV, na.rm = T))
df3.IBU <- df1 %>% group_by(State) %>%
summarize(medianIBU = median(IBU, na.rm = T))
df4 <- cbind(df3.ABV,df3.IBU)
df4 <- df4[,-3]
head(df4)
Acu = read.csv(file.choose(),header = TRUE) # read in company data
lookup = data.frame(abb = state.abb, State = state.name) #makes a data frame with State name and abbreviation.
colnames(Acu)[2] = "abb" # Change Column Name
Acu2 = merge(Acu,lookup,"abb") # make one dataset with state names and abb
AcuMapData = count(Acu2,State) #count up the occurance of each state.
#AcuMapData = AcuMapData[-c(5,9,43),] #Shows contrast between other states better
colnames(AcuMapData)[2] = "AcuSpikes" #change "n" to "Acuspikes"
AcuMapData$region <- tolower(AcuMapData$State)
AcuMapData2 = AcuMapData[-1]
states <- map_data("state")
map.df <- merge(states,AcuMapData2, by="region", all.x=T)
map.df <- map.df[order(map.df$order),]
ggplot(map.df, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=AcuSpikes))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Acuspike Systems by State")+
coord_map()
head(map.df)
head(states)
head(Acu)
head(AcuMapData)
head(Acu2)
head(df4)
colnames(df4)[1] <- "abb"
head(df4)
df5 <- merge(Acu,lookup,"abb")
head(df5)
df5 <- merge(df4,lookup,"abb")
head(df5)
head(Acu)
head(df4)
head(map.df)
head(AcuMapData)
head(lookup)
df5 <- merge(df4,lookup,"abb")
df5
head(Acu)
NROW(Acu)
head(df4)
head(lookup)
df5 <- df4[match(df4$abb,lookup$abb),]
head(df5)
head(df4)
head(lookup)
df5 <- df4[order(df4$abb,lookup$abb),]
df5 <- df4[order_by(df4$abb,lookup$abb),]
df5 <- df4[match(lookup$abb,df4$abb),]
head(df5)
df5 <- df4[match(lookup$abb,df4$abb)]
df5 <- df4[,match(lookup$abb,df4$abb)]
df5 <- df4[match(lookup$abb,df4$abb),]
head(df5)
head(lookup)
df5 <- order(lookup$abb)
head(df5)
df5 <- lookup[order(lookup$abb),]
head(df5)
head(df4)
head(df5)
df6 <- merge(df4,lookup,"abb")
head(df6)
df6 <- cbind(df4,df5)
tail(df4)
tail(df5)
grep("DC", df4$abb)
grep("DC", df5$abb)
df4[8,]
df4 <- df4[-8,]
head(df4)
NROW(df4)
df6 <- cbind(df4,df5)
head(df6)
AcuMapData
head(AcuMapData)
head(df6)
head(df6)
df6$region <- tolower(df6$State)
head(df6)
head(AcuMapData2)
head(df6)
df7 <- df6[,-c(1,4,5)]
head(df7)
head(states)
states <- map_data("state")
map.df1 <- merge(states,AcuMapData2, by="region", all.x=T)
head(map.df1)
map.df1 <- merge(states,df7, by="region", all.x=T)
head(map.df1)
map.df1 <- map.df1[order(map.df1$order),]
ggplot(map.df1, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=medianABV))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Median ABV by State")+
coord_map()
ggplot(map.df1, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=medianIBU))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Median IBU by State")+
coord_map()
?plot_grid
#make the data frame to plot
df3.ABV <- df1 %>% group_by(State) %>%
summarize(medianABV = median(ABV, na.rm = T))
df3.IBU <- df1 %>% group_by(State) %>%
summarize(medianIBU = median(IBU, na.rm = T))
df4 <- cbind(df3.ABV,df3.IBU)
df4 <- df4[,-3]
colnames(df4)[1] <- "abb"
df4 <- df4[-8,]
lookup = data.frame(abb = state.abb, State = state.name)
df5 <- lookup[order(lookup$abb),]
df6 <- cbind(df4,df5)
df6$region <- tolower(df6$State)
df7 <- df6[,-c(1,4,5)]
states <- map_data("state")
map.df1 <- merge(states,df7, by="region", all.x=T)
map.df1 <- map.df1[order(map.df1$order),]
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=medianABV))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Median ABV by State")+
coord_map()
#IBU plot
ggplot(map.df1, aes(x=long,y=lat,group=group))+
geom_polygon(aes(fill=medianIBU))+
geom_path()+
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90")+ggtitle("Median IBU by State")+
coord_map()
knitr::opts_chunk$set(echo = TRUE)
beers <- read.csv("beers.csv", header = T)
breweries <- read.csv("breweries.csv", header = T)
#merge data sets on Brewery_id
names(breweries)[1] <- "Brewery_id"
df1 <- merge(beers, breweries, by = "Brewery_id", all = T)
names(df1)[2] <- "Beer"
names(df1)[8] <- "Brewery"
#Make new column with ALE, IPA, or Other as identifier
df1$Type = ifelse(grepl("\\bale\\b", df1$Style, ignore.case = T), "ALE",
ifelse(grepl("\\bipa\\b", df1$Style, ignore.case = T), "IPA", "Other"))
head(df1)
#Make new data frame with only Ale beers
aleIPA <- df1 %>% filter(df1$Type == "ALE" | df1$Type == "IPA")
head(aleIPA)
#Make new data frame with only Ale beers
aleIPA <- df1 %>% filter(df1$Type == "ALE" | df1$Type == "IPA")
library(tidyverse)
library(tidyverse)
library(RColorBrewer)
library(cowplot)
library(class)
library(caret)
library(caret)
library(e1071)
library(stringr)
library(maps)
library(mapproj)
#Make new column with ALE, IPA, or Other as identifier
df1$Type = ifelse(grepl("\\bale\\b", df1$Style, ignore.case = T), "ALE",
ifelse(grepl("\\bipa\\b", df1$Style, ignore.case = T), "IPA", "Other"))
#Make new data frame with only Ale beers
aleIPA <- df1 %>% filter(df1$Type == "ALE" | df1$Type == "IPA")
#Make training and test data frames
splitPerc <- .7
trainIndices <- sample(1:dim(aleIPA)[1],round(splitPerc * dim(aleIPA)[1]))
dfTrain <- aleIPA[trainIndices,]
dfTest <- aleIPA[-trainIndices,]
#Omit the NAs
dfTrain <- na.omit(dfTrain)
dfTest <- na.omit(dfTest)
head(dfTrain)
#knn model
classifications <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 5, prob = TRUE)
table(dfTest$Type,classifications)
confusionMatrix(table(dfTest$Type,classifications))
#knn internal model
classifications1 <- knn.cv(dfTrain[,4:5],dfTrain$Type, k = 10)
confusionMatrix(table(classifications1,dfTrain$Type))
head(train)
iterations = 100
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
accs = data.frame(accuracy = numeric(100), k = numeric(100))
trainIndices = sample(1:dim(aleIPA)[1],round(splitPerc * dim(aleIPA)[1]))
train = aleIPA[trainIndices,]
test = aleIPA[-trainIndices,]
head(train)
head(test)
iterations = 100
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations)
{
accs = data.frame(accuracy = numeric(100), k = numeric(100))
trainIndices = sample(1:dim(aleIPA)[1],round(splitPerc * dim(aleIPA)[1]))
train = aleIPA[trainIndices,]
test = aleIPA[-trainIndices,]
for(i in 1:numks)
{
classifications = knn(train[,c(4,5)],test[,c(4,5)],train$Type, prob = TRUE, k = i)
table(classifications,test$Type)
CM = confusionMatrix(table(classifications,test$Type))
masterAcc[j,i] = CM$overall[1]
}
}
iterations = 100
numks = 100
masterAcc = matrix(nrow = iterations, ncol = numks)
for(j in 1:iterations)
{
accs = data.frame(accuracy = numeric(100), k = numeric(100))
trainIndices = sample(1:dim(aleIPA)[1],round(splitPerc * dim(aleIPA)[1]))
train = aleIPA[trainIndices,]
test = aleIPA[-trainIndices,]
train = na.omit(train)
test = na.omit(test)
for(i in 1:numks)
{
classifications = knn(train[,c(4,5)],test[,c(4,5)],train$Type, prob = TRUE, k = i)
table(classifications,test$Type)
CM = confusionMatrix(table(classifications,test$Type))
masterAcc[j,i] = CM$overall[1]
}
}
MeanAcc = colMeans(masterAcc)
plot(seq(1,numks,1),MeanAcc, type = "l", xlab = "k", ylab = "Mean Accuracy", main = "Mean Accuracy of k Values")
#knn model
classifications <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 5, prob = TRUE)
table(dfTest$Type,classifications)
confusionMatrix(table(dfTest$Type,classifications))
#knn internal model
classifications1 <- knn.cv(dfTrain[,4:5],dfTrain$Type, k = 10)
confusionMatrix(table(classifications1,dfTrain$Type))
head(df1)
p1 <- ggplot(df1, aes(x=New, y=ABV, fill=New)) +
geom_boxplot() +
ggtitle("Relationship Between Kind of Beer and ABV") +
xlab("Type of Beer") +
theme(legend.position="none")
p1
df1$New <- ifelse(grepl("\\bale\\b", df1$Style, ignore.case = T), "ALE",
ifelse(grepl("\\bipa\\b", df1$Style, ignore.case = T), "IPA",
ifelse(grepl("\\bWheat\\b", df1$Style, ignore.case = T), "Wheat",
ifelse(grepl("\\bAmber\\b", df1$Style, ignore.case = T), "Amber",
ifelse(grepl("\\bStout\\b", df1$ Style, ignore.case = T), "Stout",
ifelse(grepl("\\bLager\\b", df1$Style, ignore.case = T), "Lager",
ifelse(grepl("\\bPorter\\b", df1$Style, ignore.case = T), "Porter",
ifelse(grepl("\\bPilsner\\b", df1$Style, ignore.case = T), "Pilsner",
"Other"))))))))
head(df1)
df1$New <- as.factor(df1$New)
p1 <- ggplot(df1, aes(x=New, y=ABV, fill=New)) +
geom_boxplot() +
ggtitle("Relationship Between Kind of Beer and ABV") +
xlab("Type of Beer") +
theme(legend.position="none")
p1
p2 <- ggplot(df1, aes(x=New, y=IBU, fill=New)) +
geom_boxplot() +
ggtitle("Relationship Between Kind of Beer and IBU") +
xlab("Type of Beer") +
theme(legend.position="none")
p2
ABV_IBU <- plot_grid(p1,p2, labels = c("A","B"), nrow = 2)
ABV_IBU
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
scale_fill_discrete(name = "Beer Type") +
facet_wrap(~New)
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
scale_fill_discrete(name = "New Legend Title") +
facet_wrap(~New)
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
theme(legend.title = element_blank()) +
facet_wrap(~New)
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
lab(color="Type of Beer") +
facet_wrap(~New)
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
lab(color="Type of Beer") +
facet_wrap(~New)
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
labs(color="Type of Beers") +
facet_wrap(~New)
ggplot(df1, aes(x=ABV, y=IBU, color=New)) +
geom_point() +
geom_jitter() +
geom_smooth(color="black") +
ggtitle("Relationship Between ABV vs IBU") +
labs(color="Type of Beer") +
facet_wrap(~New)
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianABV)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median ABV by State") +
labs(fill="Median ABV") +
coord_map()
#make the data frame to plot
df3.ABV <- df1 %>% group_by(State) %>%
summarize(medianABV = median(ABV, na.rm = T))
df3.IBU <- df1 %>% group_by(State) %>%
summarize(medianIBU = median(IBU, na.rm = T))
df4 <- cbind(df3.ABV,df3.IBU)
df4 <- df4[,-3]
colnames(df4)[1] <- "abb"
df4 <- df4[-8,]
lookup = data.frame(abb = state.abb, State = state.name)
df5 <- lookup[order(lookup$abb),]
df6 <- cbind(df4,df5)
df6$region <- tolower(df6$State)
df7 <- df6[,-c(1,4,5)]
states <- map_data("state")
map.df1 <- merge(states,df7, by="region", all.x=T)
map.df1 <- map.df1[order(map.df1$order),]
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianABV)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median ABV by State") +
labs(fill="Median ABV") +
coord_map()
#IBU plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianIBU)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median IBU by State") +
labs(color="Median IBU") +
coord_map()
#IBU plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianIBU)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median IBU by State") +
labs(fill="Median IBU") +
coord_map()
classifications4 <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 7, prob = TRUE)
table(dfTest$Type,classifications4)
confusionMatrix(table(dfTest$Type,classifications4))
classifications4 <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 7, prob = TRUE)
table(dfTest$Type,classifications4)
confusionMatrix(table(dfTest$Type,classifications4))
classifications4 <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 7, prob = TRUE)
table(dfTest$Type,classifications4)
confusionMatrix(table(dfTest$Type,classifications4))
classifications4 <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 6, prob = TRUE)
table(dfTest$Type,classifications4)
confusionMatrix(table(dfTest$Type,classifications4))
classifications4 <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 6, prob = TRUE)
table(dfTest$Type,classifications4)
confusionMatrix(table(dfTest$Type,classifications4))
classifications4 <- knn(dfTrain[,4:5], dfTest[,4:5], dfTrain$Type, k = 6, prob = TRUE)
table(dfTest$Type,classifications4)
confusionMatrix(table(dfTest$Type,classifications4))
#IBU plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianIBU)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median IBU by State") +
labs(fill="Median IBU") +
coord_map()
#IBU plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianIBU)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(5)),na.value="grey90") +
ggtitle("Median IBU by State") +
labs(fill="Median IBU") +
coord_map()
#IBU plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianIBU)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(50)),na.value="grey90") +
ggtitle("Median IBU by State") +
labs(fill="Median IBU") +
coord_map()
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianABV)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median ABV by State") +
labs(fill="Median ABV") +
coord_map()
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianABV)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(50)),na.value="grey90") +
ggtitle("Median ABV by State") +
labs(fill="Median ABV") +
coord_map()
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianABV)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(20)),na.value="grey90") +
ggtitle("Median ABV by State") +
labs(fill="Median ABV") +
coord_map()
#ABV plot
ggplot(map.df1, aes(x=long,y=lat,group=group)) +
geom_polygon(aes(fill=medianABV)) +
geom_path() +
scale_fill_gradientn(colours=rev(heat.colors(10)),na.value="grey90") +
ggtitle("Median ABV by State") +
labs(fill="Median ABV") +
coord_map()
